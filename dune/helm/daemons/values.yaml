# Default values for rucio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## judgeCleanerCount gives the number of judge-cleaner pods to run
#
#
#
experiment: dune
abacusAccountCount: 1
abacusRseCount: 1
conveyorTransferSubmitterCount: 1
conveyorPollerCount: 1
conveyorFinisherCount: 1
hermesCount: 1
judgeCleanerCount: 1
judgeEvaluatorCount: 1
judgeInjectorCount: 1
judgeRepairerCount: 1
undertakerCount: 1
reaperCount: 2
transmogrifierCount: 1

serviceAccountName: useroot

image:
  repository: bjwhitefnal/fnal-rucio-daemons
  tag: latest
  pullPolicy: Always

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

minReadySeconds: 5

abacusAccount:
  threads: 1

abacusRse:
  threads: 1

conveyorTransferSubmitter:
  threads: 1
  activities: "'test1' 'test2'"
  sleepTime: 10

conveyorPoller:
  threads: 1

conveyorFinisher:
  threads: 1

hermes:
  threads: 1
  bulk: 100
  delay: 10

judgeCleaner:
  threads: 1

judgeEvaluator:
  threads: 1

judgeInjector:
  threads: 1

judgeRepairer:
  threads: 1

hermes:
  threads: 1
  bulk: 1000
  delay: 10

undertaker:
  threads: 1

reaper:
  greedy: 0
  scheme: ""
  workers: 1
  threadsPerWorker: 4
  includeRses: ""

ftsRenewal:
  enabled: 0
  image:
    repository: rucio/fts-cron
    tag: latest
    pullPolicy: Always
  voms: "dune:/dune/Role=Production"
  servers: "https://fts3-public.cern.ch:8446"


## common config values used to configure the Rucio daemons
config:
  # accounts:
    # special_accounts: "panda, tier0"

  # common:
    ## config.common.logdir: the default directoy to write logs to (default: "/var/log/rucio")
    # logdir: "/var/log/rucio"
    ## config.common.logdir: the max loglevel (default: "DEBUG")
    # loglevel: "DEBUG"
    ## config.common.mailtemplatedir: directory containing the mail templates (default: "/opt/rucio/etc/mail_templates")
    # mailtemplatedir: "/opt/rucio/etc/mail_templates"

  # database:
    ## config.database.default: the connection string for the database (default: "sqlite:////tmp/rucio.db")
    #default: "postgresql://<user>:<password>@ifdb02.fnal.gov:5433/rucio_dev"
    ## config.database.schema: the schema used in the DB. only necessary when using Oracle.
    # schema: ""
    ## config.database.pool_reset_on_return: set the “reset on return” behavior of the pool (default: "rollback")
    # pool_reset_on_return: "rollback"
    ## config.database.echo: flag to control the logging of all statements to stdout (default: "0")
    # echo: "0"
    ## config.database.po0l_recycle: this setting causes the pool to recycle connections after the given number of seconds has passed (default: "600")
    # pool_recycle: "600"
    ## config.database.pool_size: the number of connections to keep open inside the connection pool
    # pool_size: ""
    ## config.database.pool_timeout: number of seconds to wait before giving up on getting a connection from the pool
    # pool_timeout: ""
    ## config.database.maxoverflow: the number of connections to allow in connection pool "overflow"
    # max_overflow: ""
    ## config.database.powuseraccount: user used to check the DB
    # powuseraccount: ""
    ## config.database.powuseraccount: password for user used to check the DB
    # powuserpassword: ""

  # monitor:
    ## config.monitor.carbon_server: address of carbon server used for graphite monitoring (default: "localhost")
    # carbon_server: "localhost"
    ## config.monitor.carbon_port: port of carbon server used for graphite monitoring (default: "8125")
    # carbon_server: "8125"
    ## config.monitor.user_scope: scope used on the graphite server (default: "default_docker")
    # user_scope: "default_docker"

  # policy:
    ## config.permission.policy: (default "generic")
    # permission: "generic"
    ## config.permission.schema: (default "generic")
    # schema: "generic"
    ## config.permission.lfn2pfn_algorithm_default: (default "hash")
    # lfn2pfn_algorithm_default: "hash"
    ## config.permission.support: (default "https://github.com/rucio/rucio/issues/")
    # support: "https://github.com/rucio/rucio/issues/"
    ## config.permission.support_rucio: (default "https://github.com/rucio/rucio/issues/")
    # support_rucio: "https://github.com/rucio/rucio/issues/"

  # automatix:
    # sites: ""
    # sleep_time: ""
    # database_lifetime: ""
    # set_metadata: ""

  conveyor:
    # scheme: "srm,gsiftp,root,http,https"
    # transfertool: "fts3"
    # ftshosts: "https://fts3-pilot.cern.ch:8446, https://fts3-pilot.cern.ch:8446"
    cacert: "/opt/certs/CERN-bundle.pem"
    usercert: "/opt/proxy/x509up"
    # cache_time: ""
    # user_deterministic_id: ""
    # poll_timeout: ""
    # submit_timeout: ""
    # bring_online: ""
    # queue_mode: ""
    # using_memcache: ""
    # ftsmonhosts: ""

  # messaging-fts3:
    # port: "61123"
    # ssl_key_file: "/etc/grid-security/hostkey.pem"
    # ssl_cert_file: "/etc/grid-security/hostcert.pem"
    # destination: "/topic/transfer.fts_monitoring_queue_state"
    # brokers: "dashb-test-mb.cern.ch"
    # voname: "atlas"

  # messaging-hermes:
    # username: ""
    # password: ""
    # port: "61023"
    # nonssl_port: ""
    # use_ssl: ""
    # ssl_key_file: "/etc/grid-security/hostkey.pem"
    # ssl_cert_file: "/etc/grid-security/hostcert.pem"
    # destination: "/topic/rucio.events"
    # brokers: "atlas-test-mb.cern.ch"
    # voname: "atlas"
    # email_from: "Rucio <atlas-adc-ddm-support@cern.ch"
    # email_test: ""

  # tracer-kronos:
    # brokers: "atlas-test-mb.cern.ch"
    # port: "61013"
    # ssl_key_file: "/etc/grid-security/hostkey.pem"
    # ssl_cert_file: "/etc/grid-security/hostcert.pem"
    # queue: "/queue/Consumer.kronos.rucio.tracer"
    # prefetch_size: "10"
    # chunksize: "10"
    # subscription_id: "rucio-tracer-listener"
    # use_ssl: "False"
    # reconnect_attempts: "100"
    # excluded_usrdns: ""
    # username: ""
    # password: ""
    # dataset_wait: 60

  # transmogrifier:
    # maxdids: 100000

  # messaging-cache:
    # port: "61123"
    # ssl_key_file: "/etc/grid-security/hostkey.pem"
    # ssl_cert_file: "/etc/grid-security/hostcert.pem"
    # destination: "/topic/rucio.cache"
    # brokers: "dashb-test-mb.cern.ch"
    # voname: "atlas"
    # account: "ddm"

  # credentials:
    # gcs: "/opt/rucio/etc/google-cloud-storage-test.json"
    # signature_lifetime: "3600"
