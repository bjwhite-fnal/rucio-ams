#!/bin/bash

# Use this to deploy Rucio for an experiment.
# Create and use an Openshift project named rucio-<experiment name>.
# Make sure you have the proper configurations setup and
#   the environment is correct with RUCIO_AMS_DIR set.

verify_environment () {
    # Verify that the currently active Openshift project appears to be correct for the value 
    #    in EXPERIMENT and all other required environment variables are set
    echo -e "\tVerifying that the environment is configured correctly for Rucio deployment."
    # REQUIRED TO BE PRESENT
    for fnal_cfg_env in \
        EXPERIMENT \
        RUCIO_AMS_DIR \
        AMS_RUCIO_CERT \
        AMS_RUCIO_KEY \
        AMS_RUCIO_CA_BUNDLE
    do
        if [[ -z $fnal_cfg_env ]]; then
            echo -e "\tPlease provide a value for the ${fnal_cfg_env} environment variable"
            exit -1
        fi
    done

    # If you assign an ExternalIP to any service, verify we do it to them all
    if [[ -n ${RUCIO_AMS_EXT_SERVER_IP} || \
            -n ${RUCIO_AMS_EXT_AUTH_IP} || \
            -n ${RUCIO_AMS_EXT_MSG_IP} || \
            -n ${RUCIO_AMS_EXT_WEBUI_IP} ]]; then
        if [[ -z ${RUCIO_AMS_EXT_SERVER_IP} || \
                -z ${RUCIO_AMS_EXT_AUTH_IP} || \
                -z ${RUCIO_AMS_EXT_MSG_IP} || \
                -z ${RUCIO_AMS_EXT_WEBUI_IP} ]]; then
            echo -e "\tPlease ensure that all [RUCIO_AMS_EXT_SERVER_IP, RUCIO_AMS_EXT_AUTH_IP, RUCIO_AMS_EXT_MSG_IP, RUCIO_AMS_EXT_WEBUI_IP] are set if any of them are set."
            exit -2
        fi
    fi
    # IMPORTANT: Ensures we have the OKD project set to the experiment that we intend,
    #   so that we don't accidentally do dumb stuff to the wrong experiment's Rucio deployment
    if ! [[ ${EXPERIMENT} == "rubin" ]]; then
        ocproject=$(oc project)
        proj=($ocproject)
        if ! [[ ${proj[2]} == "\"rucio-${EXPERIMENT}\"" ]]; then
            echo -e "\tPlease ensure that the Openshift project is set to rucio-${EXPERIMENT}"
            exit -3
        fi
    else
        kubecontext=$(kubectl config current-context)
        echo ${kubecontext}
        if ! [[ ${kubecontext} =~ *rubin* ]]; then
            echo -e "\tPlease ensure that the Kubernetes context is set to rucio-${EXPERIMENT}"
            exit -4
        fi
    fi

    # Verify that we have the Helm charts for the version of Rucio we are trying to deploy
    chart_version=$(grep "version" $RUCIO_AMS_DIR/rucio-ams/helm/helm-charts/charts/rucio-server/Chart.yaml | awk '{print $2}')
    chart_major_version=${chart_version::4}
    selected_major_version=${RUCIO_AMS_VERSION::4}
    if ! [[ ${chart_major_version} == ${selected_major_version} ]]; then
        echo -e "\tPlease ensure that the appropriate Helm charts are used for version ${RUCIO_AMS_VERSION}"
        echo -e "\tCurrent version is ${chart_version}"
	exit -5
    fi
}

echo $EXPERIMENT

echo -e "**************** Initializing Openshift Application: rucio-$EXPERIMENT ****************"
verify_environment

echo -e "\tCreating application secrets..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create_cert_secrets.sh

echo -e "\tCreating StatsD service..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-statsd.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-statsd.sh > /dev/null

echo -e "\tCreating Prometheus server..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-prometheus.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-prometheus.sh > /dev/null

echo -e "\tCreating cache service..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-cache.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-cache.sh > /dev/null

echo -e "\tCreating messenger service..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-messenger.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-messenger.sh > /dev/null

echo -e "\tCreating daemons..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-daemons.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-daemons.sh > /dev/null

echo -e "\tCreating servers..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-server.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-server.sh > /dev/null

echo -e "\tCreating web UI..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-webui.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-webui.sh > /dev/null

echo -e "\tCreating networking routes..."
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/gen-routes.sh
$RUCIO_AMS_DIR/rucio-ams/helm/helm_scripts/create-routes.sh > /dev/null

# Done by the renew-fts-proxy-on-helm-install Job, when the YAML for those resources are applied, starting in 1.29
#echo -e "\tStarting the proxy generation cronjob."
#kubectl create job --from=cronjob/rucio-${EXPERIMENT}-renew-fts-proxy ${USER}-manual-proxy-1

# Only bother with this if operating the OKD Services with OKD externalIPs
# Check if we have any
if [[ -n ${RUCIO_AMS_EXT_SERVER_IP} || \
    -n ${RUCIO_AMS_EXT_AUTH_IP} || \
    -n ${RUCIO_AMS_EXT_WEBUI_IP} || \
    -n ${RUCIO_AMS_EXT_MSG_IP} ]]; then
    # Ensure that we have all
    if [[ -z ${RUCIO_AMS_EXT_SERVER_IP} || \
        -z ${RUCIO_AMS_EXT_AUTH_IP} || \
        -z ${RUCIO_AMS_EXT_WEBUI_IP} || \
        -z ${RUCIO_AMS_EXT_MSG_IP} ]]; then
        echo -e "\tMake sure to set all of RUCIO_AMS_EXT_SERVER_IP, RUCIO_AMS_EXT_AUTH_IP, RUCIO_AMS_EXT_WEBUI_IP, RUCIO_AMS_EXT_MSG_IP if you set any of them."
        exit -5
    else
        echo -e "\tApplying external IP addresses to the services."
        # Watch out for some tricky string concatenation to get the external ips into the spec string
        auth_server_service=$(kubectl get services | grep "server-auth" | awk '{print $1}')
        server_service=$(kubectl get services | grep "server" | grep -v "auth" | awk '{print $1}')
        webui_service=$(kubectl get services | grep "rucio-ui" | awk '{print $1}')
        messenger_service=$(kubectl get services | grep "rucio-messenger" | awk '{print $1}')
        kubectl patch svc ${messenger_service} -p '{"spec":{"externalIPs":["'"$RUCIO_AMS_EXT_MSG_IP"'"]}}'
        kubectl patch svc ${webui_service} -p '{"spec":{"externalIPs":["'"$RUCIO_AMS_EXT_WEBUI_IP"'"]}}'
        kubectl patch svc ${server_service} -p '{"spec":{"externalIPs":["'"$RUCIO_AMS_EXT_SERVER_IP"'"]}}'
        kubectl patch svc ${auth_server_service} -p '{"spec":{"externalIPs":["'"$RUCIO_AMS_EXT_AUTH_IP"'"]}}'
        echo -e "\tServer: ${RUCIO_AMS_EXT_SERVER_IP}"
        echo -e "\tAuth Server: ${RUCIO_AMS_EXT_AUTH_IP}"
        echo -e "\tMessenger: ${RUCIO_AMS_EXT_MSG_IP}"
        echo -e "\tWebui: ${RUCIO_AMS_EXT_WEBUI_IP}"
    fi
fi

echo -e "**************** Openshift application rucio-$EXPERIMENT deployment successful ****************"
