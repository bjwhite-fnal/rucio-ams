{{- if gt .Values.reaperCount 0.0 -}}
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-reaper
  labels:
    app: {{ template "rucio.name" . }}
    chart: {{ template "rucio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.reaperCount }}
  selector:
    matchLabels:
      app: {{ template "rucio.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.strategy.type }}
{{- if eq .Values.strategy.type "RollingUpdate" }}
    {{- with .Values.strategy.rollingUpdate }}
    rollingUpdate:
{{ toYaml . | trim | indent 6 }}
    {{- end }}
{{- end }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  template:
    metadata:
      labels:
        app: {{ template "rucio.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
    {{- end }}
      volumes:
      - name: ca-volume
        secret:
          secretName: ca-bundle
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: ca-volume
              mountPath: /etc/grid-security/certificates
          env:
            {{- range $key1, $val1 := .Values.config }}
            {{- range $key2, $val2 := $val1}}
            - name: RUCIO_CFG_{{ $key1 | upper }}_{{ $key2 | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "rucio.fullname" $ }}.cfg
                  key: {{ $key1 }}_{{ $key2 }}
            {{- end}}
            {{- end}}
            - name: EXPERIMENT
              value: "{{ .Values.experiment }}"
            - name: RUCIO_DAEMON
              value: "reaper"
            - name: RUCIO_DAEMON_ARGS
              value: '{{ if .Values.reaper.greedy }} --greedy {{ end }} --total-workers {{ .Values.reaper.workers }}  --threads-per-worker {{ .Values.reaper.threadsPerWorker }} {{ if .Values.reaper.scheme }}--scheme {{ .Values.reaper.scheme }}{{ end }}{{ if .Values.reaper.includeRses }} --include-rses="{{ .Values.reaper.includeRses }}"{{ end }}{{ if .Values.reaper.rses }} --rses "{{ .Values.reaper.rses }}"{{ end }}'
            - name: GLOBUS_THREAD_MODEL
              value: "pthread"
            - name: RUCIO_HOME
              value: "/opt/rucio/reaper"
            - name: X509_USER_PROXY
              value: "/opt/proxy/x509up"
            - name: RUCIO_CFG_MONITOR_CARBON_SERVER
              value: "{{ .Values.monitor.carbon_server }}"
            - name: RUCIO_CFG_MONITOR_CARBON_PORT
              value: "{{ .Values.monitor.carbon_port }}"
            - name: RUCIO_CFG_MONITOR_USER_SCOPE
              value: "{{ .Values.monitor.user_scope }}"
            - name: RUCIO_CFG_DATABASE_ECHO
              value: "{{ .Values.logging.log_level }}"
{{ end }}
