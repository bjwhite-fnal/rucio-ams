--- rucio/common/objectstore.py
+++ objectstore.py
@@ -17,6 +17,7 @@
 # - Vincent Garonne, <vincent.garonne@cern.ch>, 2016
 # - Joaquin Bogado <jbogado@linti.unlp.edu.ar>, 2018
 # - Hannes Hansen <hannes.jakob.hansen@cern.ch>, 2019
+# - Brandon White <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -46,7 +47,7 @@ logging.getLogger("boto.s3.connection").setLevel(logging.WARNING)
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=3600,
-                                 arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+                                 arguments={'url': config.config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
 
 # for local test
 REGION = make_region().configure('dogpile.cache.memory',
--- rucio/common/rse_attributes.py
+++ rse_attributes.py
@@ -7,6 +7,7 @@
 #
 # Authors:
 # - Wen Guan, <wen.guan@cern.ch>, 2015
+# - Brandon White, <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -21,10 +22,11 @@ from dogpile.cache import make_region
 from dogpile.cache.api import NoValue
 
 from rucio.core import rse as rse_core
+from rucio.common.config import config_get
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=3600,
-                                 arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+                                 arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
 
 # for local test
 # REGION = make_region().configure('dogpile.cache.memory',
--- rucio/core/config.py
+++ config.py
@@ -17,6 +17,7 @@
 # - Vincent Garonne <vgaronne@gmail.com>, 2015-2017
 # - Cedric Serfon <cedric.serfon@cern.ch>, 2017
 # - Hannes Hansen <hannes.jakob.hansen@cern.ch>, 2018-2019
+# - Brandon White <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -24,13 +25,14 @@ from dogpile.cache import make_region
 from dogpile.cache.api import NoValue
 
 from rucio.common.exception import ConfigNotFound
+from rucio.common.config import config_get
 from rucio.db.sqla import models
 from rucio.db.sqla.session import read_session, transactional_session
 
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=3600,
-                                 arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+                                 arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
 
 
 @read_session
--- rucio/core/naming_convention.py
+++ naming_convention.py
@@ -9,6 +9,7 @@
   Authors:
   - Vincent Garonne, <vincent.garonne@cern.ch>, 2015
   - Hannes Hansen, <hannes.jakob.hansen@cern.ch>, 2018
+  - Brandon White, <bjwhite@fnal.gov>, 2019
 
   PY3K COMPATIBLE
 """
@@ -23,6 +24,7 @@ from dogpile.cache import make_region
 from dogpile.cache.api import NO_VALUE
 
 from rucio.common.exception import Duplicate, RucioException, InvalidObject
+from rucio.common.config import config_get
 from rucio.db.sqla import models
 from rucio.db.sqla.constants import KeyType
 from rucio.db.sqla.session import read_session, transactional_session
@@ -30,7 +32,7 @@ from rucio.db.sqla.session import read_session, transactional_session
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=3600,
-                                 arguments={'url': "127.0.0.1:11211",
+                                 arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'),
                                             'distributed_lock': True})
 
 
--- rucio/core/rse.py
+++ rse.py
@@ -25,6 +25,7 @@
 # - Dimitrios Christidis <dimitrios.christidis@cern.ch>, 2018-2019
 # - Hannes Hansen <hannes.jakob.hansen@cern.ch>, 2018
 # - Andrew Lister <andrew.lister@stfc.ac.uk>, 2019
+# - Brandon White <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -54,7 +55,7 @@ import rucio.core.account_counter
 
 from rucio.core.rse_counter import add_counter, get_counter
 from rucio.common import exception, utils
-from rucio.common.config import get_lfn2pfn_algorithm_default
+from rucio.common.config import get_lfn2pfn_algorithm_default, config_get
 from rucio.db.sqla import models
 from rucio.db.sqla.constants import RSEType
 from rucio.db.sqla.session import read_session, transactional_session, stream_session
@@ -62,7 +63,7 @@ from rucio.db.sqla.session import read_session, transactional_session, stream_se
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=3600,
-                                 arguments={'url': "127.0.0.1:11211",
+                                 arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'),
                                             'distributed_lock': True})
 
 
--- rucio/core/rse_expression_parser.py
+++ rse_expression_parser.py
@@ -11,6 +11,7 @@
   - Mario Lassnig, <mario.lassnig@cern.ch>, 2013
   - Cedric Serfon, <cedric.serfon@cern.ch>, 2014
   - Hannes Hansen, <hannes.jakob.hansen@cern.ch>, 2018-2019
+  - Brandon White, <bjwhite@fnal.gov>, 2019
 
   PY3K COMPATIBLE
 '''
@@ -24,6 +25,7 @@ from hashlib import sha256
 from six import add_metaclass
 
 from rucio.common import schema
+from rucio.common.config import config_get
 from rucio.common.exception import InvalidRSEExpression, RSEBlacklisted
 from rucio.core.rse import list_rses, get_rses_with_attribute, get_rse_attribute
 from rucio.db.sqla.session import transactional_session
@@ -41,7 +43,7 @@ PATTERN = r'^%s(%s|%s|%s)*' % (PRIMITIVE, UNION, INTERSECTION, COMPLEMENT)
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=3600,
-                                 arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+                                 arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
 
 
 @transactional_session
--- rucio/core/transfer.py
+++ transfer.py
@@ -12,6 +12,7 @@
 # - Hannes Hansen, <hannes.jakob.hansen@cern.ch>, 2018
 # - Robert Illingworth, <illingwo@fnal.gov>, 2019
 # - Andrew Lister, <andrew.lister@stfc.ac.uk>, 2019
+# - Brandon White, <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -53,7 +54,7 @@ Requests accessed by request_id  are covered in the core request.py
 
 REGION_SHORT = make_region().configure('dogpile.cache.memcached',
                                        expiration_time=600,
-                                       arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+                                       arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
 USER_TRANSFERS = config_get('conveyor', 'user_transfers', False, None)
 
 
--- rucio/daemons/reaper/reaper2.py
+++ reaper2.py
@@ -21,6 +21,7 @@
 # - Dimitrios Christidis <dimitrios.christidis@cern.ch>, 2019
 # - Cedric Serfon <cedric.serfon@cern.ch>, 2019
 # - Andrew Lister <andrew.lister@stfc.ac.uk>, 2019
+# - Brandon White <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -75,7 +76,7 @@ GRACEFUL_STOP = threading.Event()
 
 REGION = make_region().configure('dogpile.cache.memcached',
                                  expiration_time=600,
-                                 arguments={'url': "127.0.0.1:11211",
+                                 arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'),
                                             'distributed_lock': True})
 
 
--- rucio/rse/__init__.py
+++ __init__.py
@@ -18,6 +18,7 @@
 # - Cedric Serfon, <cedric.serfon@cern.ch>, 2017-2019
 # - James Perry, <j.perry@epcc.ed.ac.uk>, 2019
 # - Andrew Lister, <andrew.lister@stfc.ac.uk>, 2019
+# - Brandon White, <bjwhite@fnal.gov>, 2019
 #
 # PY3K COMPATIBLE
 
@@ -91,5 +92,5 @@ if rsemanager.SERVER_MODE:   # pylint:disable=no-member
     RSE_REGION = make_region(function_key_generator=rse_key_generator).configure(
         'dogpile.cache.memcached',
         expiration_time=3600,
-        arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+        arguments={'url': config.config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
     setattr(rsemanager, 'RSE_REGION', RSE_REGION)
--- rucio/tests/test_judge_repairer.py
+++ test_judge_repairer.py
@@ -9,12 +9,14 @@
 # - Martin Barisits, <martin.barisits@cern.ch>, 2014-2017
 # - Mario Lassnig, <mario.lassnig@cern.ch>, 2014
 # - Andrew Lister, <andrew.lister@stfc.ac.uk>, 2019
+# - Brandon White, <bjwhite@fnal.gov>, 2019
 
 from dogpile.cache import make_region
 from hashlib import sha256
 
 from rucio.common.types import InternalAccount, InternalScope
 from rucio.common.utils import generate_uuid as uuid
+from rucio.common.config import config_get
 from rucio.core.account_limit import set_account_limit
 from rucio.core.did import add_did, attach_dids
 from rucio.core.lock import successful_transfer, failed_transfer, get_replica_locks
@@ -298,7 +300,7 @@ class TestJudgeRepairer():
 
         region = make_region().configure('dogpile.cache.memcached',
                                          expiration_time=3600,
-                                         arguments={'url': "127.0.0.1:11211", 'distributed_lock': True})
+                                         arguments={'url': config_get('cache', 'url', False, '127.0.0.1:11211'), 'distributed_lock': True})
         region.delete(sha256(rse).hexdigest())
 
         update_rse(rse_id, {'availability_write': True})
